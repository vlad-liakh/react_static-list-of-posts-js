{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","users","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAEzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WChBFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChB,qBAAKP,UAAU,cAAf,SACGM,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,SAKhD,qCACE,uBACA,mBAAG,UAAQ,oBAAX,kCCZOC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,SCAGW,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,EAAKC,QAGR,8BACG,eACA,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAI1B,mBAAGX,UAAU,iBAAb,SACGa,EAAKT,OAGR,cAAC,EAAD,CAAaE,SAAUO,EAAKP,gBCnBnBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCW/B,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAXmBO,EAWDL,EAAKK,OAVhBC,EAAgBC,MAAK,SAAAC,GAAK,OAAIA,EAAMZ,KAAOS,MAC3C,MAUPZ,UAPsBG,EAOGI,EAAKJ,GANvBa,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWf,QADjE,IAAwBA,EALHS,KAeRO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCrBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7246fca6.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n\n// export const CommentInfo = ({ todo }) => (\n//   <div className=\"CommentInfo\">\n//     <div className=\"CommentInfo__title\">\n//       <strong className=\"CommentInfo__name\">\n//         {/* {todo.comment && todo.comment.name} */}\n//         {todo.comment && todo.comment.map(el => el.name)}\n//       </strong>\n\n//       {' by '}\n\n//       <a\n//         className=\"CommentInfo__email\"\n//         href={todo.comment && todo.comment.map(el => el.email)}\n//       >\n//         {todo.comment && todo.comment.map(el => el.email)}\n//       </a>\n//     </div>\n\n//     <div className=\"CommentInfo__body\">\n//       {todo.comment && todo.comment.map(el => el.body)}\n//     </div>\n//   </div>\n// );\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n\n    </div>\n  ) : (\n    <>\n      <hr />\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    </>\n  )\n);\n\n// export const CommentList = ({ comments }) => (\n//   comments && comments.length > 0 ? (\n//     <div className=\"CommentList\">\n//       {comments.map(comment => (\n//         <CommentInfo comment={comment} key={comment.id} />\n//       ))}\n\n//     </div>\n//   ) : (\n//     <>\n//       <hr />\n//       <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n//     </>\n//   )\n// );\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n        {<UserInfo user={post.user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(users => users.id === userId)\n      || null;\n}\n\nfunction getUserComment(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getUserComment(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}